<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hahaxixi blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.hahaxixi.cc/"/>
  <updated>2017-03-11T03:30:14.000Z</updated>
  <id>http://blog.hahaxixi.cc/</id>
  
  <author>
    <name>hahaxixi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MVC从多层模型开始</title>
    <link href="http://blog.hahaxixi.cc/2017/03/03/MVC01/"/>
    <id>http://blog.hahaxixi.cc/2017/03/03/MVC01/</id>
    <published>2017-03-03T01:38:48.000Z</published>
    <updated>2017-03-11T03:30:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果你的控制层比模型层更大，产品同学找你改个功能很费劲，一改就来bug的时候，你可以考虑用多层模型解耦你的业务。</p>
<h3 id="MVC功能定位"><a href="#MVC功能定位" class="headerlink" title="MVC功能定位"></a>MVC功能定位</h3><ol>
<li>模型(Model)应当负责管理几乎所有涉及数据的事情，包含数据、<strong>业务逻辑</strong>，以及数据校验规则。</li>
<li>控制器(Controller)用来解释请求数据，使用相应的模型，并渲染相应的响应或视图，可以被看作是模型和视图之间的中间人处理动作和请求。</li>
<li>Views包含用户界面元素，如文本、图片和表单，当然，现在流行前后端分离的架构中，这一层可能从后端同学那里剥离出去了。</li>
</ol>
<p>数据和业务逻辑放在模型层，控制器只是个中间人的角色，这样就保持了瘦控制器和胖模型。但是实际开发中，很多同学会将数据的校验和业务逻辑放在控制器层，变成了胖控制器，瘦模型。</p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果你的控制层比模型层更大，产品同学找你改个功能很费劲，一改就来bug的时候，你可以考虑用多层模型解耦你的业务。&lt;/p&gt;
&lt;h3 id=&quot;MVC功能定位&quot;&gt;&lt;a href=&quot;#MVC功能定位&quot; class=&quot;headerlink&quot; title=&quot;MVC功能定位&quot;&gt;&lt;/a&gt;M
    
    </summary>
    
    
  </entry>
  
</feed>
